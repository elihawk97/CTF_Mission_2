import wave
import numpy as np

def append_message_to_audio(audio_filename, binary_message, output_filename):
    # Load the existing audio file
    with wave.open(audio_filename, 'rb') as wav_file:
        params = wav_file.getparams()  # Get the original file's parameters
        audio_data = wav_file.readframes(wav_file.getnframes())  # Read the audio data

    # Convert binary message to a string
    byte_array = bytearray()
    for i in range(0, len(binary_message), 8):
        byte = binary_message[i:i+8]
        byte_array.append(int(byte, 2))

    message = byte_array.decode('ascii')  # Decode binary to ASCII text

    # Convert the message to samples (as ASCII characters)
    message_samples = np.frombuffer(message.encode('ascii'), dtype=np.uint8)

    # Combine the audio data and the message samples
    combined_data = np.frombuffer(audio_data, dtype=np.int16).astype(np.int16)
    padding = np.zeros(len(message_samples), dtype=np.int16)  # Pad with zeros to not alter the audio
    combined_data = np.concatenate((combined_data, padding))

    # Save the combined data to a new WAV file
    with wave.open(output_filename, 'w') as wav_file:
        wav_file.setnchannels(params.nchannels)  # Use original channel count
        wav_file.setsampwidth(params.sampwidth)  # Use original sample width
        wav_file.setframerate(params.framerate)  # Use original frame rate
        wav_file.writeframes(combined_data.tobytes())

    # Append the message at the end of the file as metadata (not interfering with audio)
    with open(output_filename, 'ab') as wav_file:
        wav_file.write(message.encode('ascii'))  # Append the ASCII message directly

# Example usage
binary_message
)
append_message_to_audio('arabic.wav', binary_message, 'combined_audio_secret.wav')
